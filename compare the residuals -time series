#compare the residuals with the measurements (FLUXnet) and plot their time series
library(ggplot2)
library(ggprism)
library(patchwork)
library(hrbrthemes)
library(ncdf4)
#virginica #versicolor #setosa
my_data <- read.csv("MMS_FLX.csv")
nc_data <- nc_open("SoutheastUS_US-MMS_ICB20TRCNPRDCTCBC.elm.h0.1998_2014.nc")
lon <- ncvar_get(nc_data, "lon")
lat <- ncvar_get(nc_data, "lat", verbose = F)


#onef <- my_data$LE_F_MDS
par(mfrow=c(1,2),tcl=-0.5, family="serif", mai=c(0.2,0.9,0.2,0.2))

onef <- my_data$TA_F_MDS #Air temperature, gapfilled using MDS method
onef <- my_data$TA_ERA #Air temperature, downscaled from ERA, linearly regressed using measured only site dataS method
onef <- my_data$GPP_CUT_REF#Net Ecosystem Exchange, using Constant Ustar Threshold (CUT) across years, 
onef <- my_data$WS_F#Wind speed, consolidated from WS and WS_ERA
onef <- my_data$WS_F#Wind speed, consolidated from WS and WS_ERA
onef <- my_data$SW_IN_F
onef <- my_data$H_F_MDS
onef <- my_data$LE_F_MDS
onef1 <- my_data$GPP_DT_VUT_MEAN
onef2<- my_data$GPP_NT_VUT_MEAN
onef <- (onef1+onef2)/2
onef <- my_data$NEE_CUT_MEAN#Net E
oneft <- my_data$TA_F_MDS 
t <- ncvar_get(nc_data, "time")

head(lon) # look at the first few entries in the longitude vector
head(lat) # look at the first few entries in the longitude vector
fillvalue <- ncatt_get(nc_data, "ZWT", "9.999999616903162e+35")
elm <- ncvar_get(nc_data, "EFLX_LH_TOT")
elm <- ncvar_get(nc_data, "NEE")
elm <- elm*24*3600
elm <- elm[362:6205]
resi <- onef-elm
tbot <- ncvar_get(nc_data, "TBOT")
tbot <- tbot[362:6205]-273
df <- data.frame(as.vector(elm), as.vector(onef), as.vector(resi))


# Scatter plot and linear regression line
y <- resi#[365:2922]


x <- tbot#[365:2922]
z <- oneft
plot(x, y, col="lightpink", pch = 1,main='GPP',
     xlab='Temp (ELM)', ylab='Fluxnet-ELM',ylim=c(-20,20),xlim=c(0,40),xaxs="i",yaxs="i",cex.lab = 1.2)
abline(lm(y ~ x), col = 1, lwd = 1.5)
# Text
coef <- round(coef(lm(y ~ x)), 2)
text(12,18,  paste("Y = ", coef[2], "x", "+", coef[1] ))
res2 <-cor.test(x,y,  method = "spearman")
res2
cor(x, y, method = c("pearson", "kendall", "spearman")) 
cor.test(x, y, method=c("pearson", "kendall", "spearman"))

plot(z, y, col="lightpink", pch = 20,main='',
     xlab='Temp (FLuxNET)',  ylab='', ylim=c(-20,20),xlim=c(0,40),xaxs="i",yaxs="i",cex.lab = 1.2)
abline(lm(y ~ z), col = 1, lwd = 1.5)
# Text
coef <- round(coef(lm(y ~ z)), 2)
text(12,18,  paste("Y = ", coef[2], "x", "+", coef[1] ))
res2 <-cor.test(z,y,  method = "spearman")
res2
cor(z, y, method = c("pearson", "kendall", "spearman")) 
cor.test(z, y, method=c("pearson", "kendall", "spearman"))
###########%%%%%%%%%plot series###########%%%%%%%%%###########%%%%%%%%%###########%%%%%%%%%

start_date <- as.Date("19990101",format="%Y%m%d")          # Create example date

#Now, we can create a range of dates with the seq function as follows:

usedate <- seq(start_date, by = "day", length.out = 5844)  # Get Range with 5 dates
#2020-10-05" "2020-10-06" "2020-10-07" "2020-10-08" "2020-10-09"
#usedate = as.Date(as.character(dates),format="%Y%m%d")


df <- data.frame(date = usedate,
                 valuee = elm, valueo = onef, valuer=resi)

ggplot() + 
  geom_point(data = df, aes(x = date, y = valuer), color = "darkgreen",shape=20,size=2) +
  #geom_point(data = df, aes(x = date, y = valueo), color = "brown1",size=2,shape=20) +
  #theme_prism() + 
  #theme_bw() +
  #theme(axis.text.x = element_text(angle = 0, hjust = 1))+
  scale_fill_grey() +
  labs(x = "Month-year")+
  # labs(y = "Latent heat (W/m^2)")+
  labs(x = "Month-year")+
  ylab(bquote(FluxNET-ELM))+
  theme(legend.position="none")+
  theme_bw(base_size = 16) +
  ggtitle("NEE (gC m-2 d-1)")+
  theme(plot.title = element_text(hjust = 0.5))+
  scale_y_continuous(guide = "prism_minor", 
                     limits = c(-20,20),
                     expand = c(0, 0),
                     minor_breaks = seq(-20,20, 2))+
  scale_x_date(limits = as.Date(c("1999-01-01","2014-12-31")), expand = c(0,0), date_labels = "%b-%Y",
               breaks = seq(as.Date("1999-01-01"), as.Date("2014-12-31"), by = "2 year"),date_minor_breaks = "6 month" )


# geom_boxplot()
#plot(t,d,type="p",col="green3",axes=T, pch=16,cex=0.8, main="ELM_US-DK3",ylab="TG (deg C)",xaxs="i",xaxt = "n",yaxs="i",cex.lab = 1.5,cex.axis = 1.5,cex.main = 2)
#modify x-axis and y-axis intervals)
#grid(nx =11, ny = NULL,
#    lty = 2,      # Grid line type
#  col = "gray", # Grid line color
# lwd = 2)      # G
#ticks = c(365,730,1095,1460,1825,2190,2555,2921,3286,3651,4016)
#axis(side = 1, at = ticks)
#axis(side = 2)

